name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    name: Lint and Type Check
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run TypeScript type check
      run: npx tsc --noEmit

    - name: Run unit tests
      run: npm test -- --run

    - name: Verify no telemetry
      run: npm run verify:no-telemetry

  build-web:
    runs-on: ubuntu-latest
    name: Build Web Application
    needs: lint-and-typecheck
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: dist/

  build-tauri:
    runs-on: ${{ matrix.platform }}
    name: Build Tauri App
    needs: lint-and-typecheck
    
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
    
    # Linux build disabled for now (pending CI capacity)
    
    - name: Install dependencies (macOS only)
      if: matrix.platform == 'macos-latest'
      run: npm ci
    
    - name: Install dependencies (Windows only)
      if: matrix.platform == 'windows-latest'
      run: npm ci

    - name: Install NSIS (Windows only)
      if: matrix.platform == 'windows-latest'
      run: choco install nsis -y
    
    - name: Install Tauri CLI
      run: npm install -g @tauri-apps/cli
    
    - name: Build Tauri application (Windows)
      if: matrix.platform == 'windows-latest'
      run: npm run tauri build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_BUNDLE_TARGETS: nsis,msi

    - name: Build Tauri application (macOS)
      if: matrix.platform == 'macos-latest'
      run: npm run tauri build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_BUNDLE_TARGETS: dmg

    # Linux build disabled for now (pending CI capacity)
    
    - name: Upload Tauri artifacts (Windows)
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: tauri-windows
        path: |
          src-tauri/target/release/bundle/msi/*.msi
          src-tauri/target/release/bundle/nsis/*.exe
        if-no-files-found: ignore
    
    - name: Upload Tauri artifacts (macOS)
      if: matrix.platform == 'macos-latest'  
      uses: actions/upload-artifact@v4
      with:
        name: tauri-macos
        path: |
          src-tauri/target/release/bundle/dmg/*.dmg
          src-tauri/target/release/bundle/macos/*.app
    
    # Linux artifacts disabled for now

  security-audit:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Run npm audit
      run: npm audit --audit-level high
      continue-on-error: true
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run cargo audit
      run: cargo audit
      working-directory: src-tauri
